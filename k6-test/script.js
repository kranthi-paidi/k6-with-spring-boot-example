/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * Generator version: 7.8.0-SNAPSHOT
 */


import http from "k6/http";
import faker from "k6/x/faker";
import { group, check, sleep } from "k6";

const BASE_URL = "http://localhost:8080";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 5;
// Global variables should be initialized.

// The options object is used to configure the k6 test execution.
// VUs (Virtual Users) define the number of concurrent VUs that will run the script.
// The duration is the time for which the test will run.
export const options = {

    thresholds: {
        http_req_duration: ["p(95)<20"], // 95% of requests must complete below 50ms
        http_req_failed: ["rate<0.01"], // <1% of requests must fail
    },
    scenarios: {
        shared_iterations: {
            executor: "shared-iterations",
            vus: 10,
            iterations: 100,
            maxDuration: "5m",
        }
    }
};

export default function() {

    let product_name = faker.product.productName();
    let product_description = faker.word.loremIpsumSentence(15);
    let product_price = Math.round((Math.random() * 1000 + Number.EPSILON) * 100) / 100;
    
    group("/api/product", () => {

        // Request No. 2: createProduct
        {
            let url = BASE_URL + `/api/product`;
            let body = {"name": product_name, "description": product_description, "price": product_price};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "application/json"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Create Product": (r) => r.status === 201
            });
        }
        // Request No. 1: getAllProducts
        {
            let url = BASE_URL + `/api/product`;
            let request = http.get(url);

            check(request, {
                "Get Product": (r) => r.status === 200,
                "Assert Product in DB": (r) => r.json().length > 0 && r.json().some(p => p.name === product_name)
            });

            sleep(SLEEP_DURATION);
        }


    });

}
